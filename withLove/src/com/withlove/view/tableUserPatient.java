/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.withlove.view;

import com.withlove.DAO.AppointmentDAOImpl;
import com.withlove.model.Appointment;
import com.withlove.model.Patient;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author SENA
 */
public class tableUserPatient extends javax.swing.JPanel {
    
   
     AppointmentDAOImpl appointmentDAO = new AppointmentDAOImpl();
     private Patient patient;
     Date today = new Date();
     Calendar cal = Calendar.getInstance();
     int year = cal.get(Calendar.YEAR);
     
    
    public tableUserPatient(Patient patient) {
        initComponents();
        this.patient = patient;
        loadDataIntoTable();      
       this.txtNameI.setText("Hello "+patient.getNamePatient()+" "+patient.getLastNamePa());
       this.txtTime.setText("Today is  "+today.getDate()+"/"+(today.getMonth()+1)+"/"+ year);
        
    }
    
    private void loadDataIntoTable() {
        // Suponiendo que tienes una instancia de PatientDAOImpl llamada patientDAOImpl
        List<Appointment> appointments = appointmentDAO.getAllOnePat(patient.getIdentification());

        // Preparamos los datos para la tabla
        Object[][] data = new Object[appointments.size()][5]; // 9 es el n√∫mero de columnas que tienes en tu tabla
        String[] columnNames = {"ID", "ID Professional", "User", "Date","Hour"};

        for (int i = 0; i < appointments.size(); i++) {
          
          Appointment app = appointments.get(i);
            data[i][0] = app.getIdAppointment();
            data[i][1] = app.getIdProfessional();
            data[i][2] = app.getIdentification();
            data[i][3] = app.getDateAvailable();
            data[i][4] = app.getHourAvailable();
        
        }

        // Configuramos el modelo de la JTable
        tablePatients.setModel(new DefaultTableModel(data, columnNames));
        
    
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablePatients = new javax.swing.JTable();
        txtNameI = new javax.swing.JLabel();
        txtTime = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(760, 540));
        setPreferredSize(new java.awt.Dimension(760, 540));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablePatients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IdPatient", "Name", "LastName", "Insurer"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablePatients);
        if (tablePatients.getColumnModel().getColumnCount() > 0) {
            tablePatients.getColumnModel().getColumn(0).setMinWidth(60);
            tablePatients.getColumnModel().getColumn(0).setPreferredWidth(60);
            tablePatients.getColumnModel().getColumn(0).setMaxWidth(60);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, 590, 250));

        txtNameI.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        txtNameI.setText("Not Delete");
        add(txtNameI, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 240, 40));

        txtTime.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtTime.setText("Not Delete");
        add(txtTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, 320, 30));
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablePatients;
    private javax.swing.JLabel txtNameI;
    private javax.swing.JLabel txtTime;
    // End of variables declaration//GEN-END:variables
}
